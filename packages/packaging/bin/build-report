#!/usr/bin/env node
const path = require('path');
const webpack = require('webpack');
const fs = require('fs');
const rmfr = require('rmfr')
const entry = path.resolve(process.cwd(), "client/index.js");
const examples = path.resolve(process.cwd(), "examples/");

(async () => {
  try {
    await rmfr("./dist");
    fs.mkdirSync("./dist");
  } catch(e) {
    // do nothing, already exists
    console.error(e);
  }
  
  
  const config = require("../webpack.config.js")(entry, examples);
  
  const bundler = webpack(config);
  bundler.run((err, stats) => {
    if (err) {
      console.error(err.stack || err);
      if (err.details) {
        console.error(err.details);
      }
      return;
    }
  
    const info = stats.toJson();
  
    if (stats.hasErrors()) {
      for (var err of info.errors) {
        console.error(err);
      }
    }
  
    if (stats.hasWarnings()) {
      for (var msg of info.warnings) {
        console.warn(msg);
      }
    }
    // console.log(err, stats);
    fs.writeFileSync('./dist/profile.json', JSON.stringify(stats.toJson()));
  });
  
  require(`@babel/register`)({
    ignore: [/node_modules\/(?!@seasketch-sls-geoprocessing)/]
    // babelrc: false,
    plugins: ["@babel/plugin-proposal-class-properties"],
    presets: [
      "@babel/preset-react",
      ["@babel/preset-env", {
        useBuiltIns: "usage",
        targets: {
          node: 8
        }
      }]
    ]
  });
  // this won't be used, it's just so that the clients can be loaded for publish the module metadata
  process.env.CLIENT_VERSION = process.env.PACKAGING_VERSION = '0.0.0';
  const c = require(`${process.cwd()}/client/index.js`);
  const clients = [];
  for (var title of Object.keys(c)) {
    const client = c[title];
  
    clients.push({
      title: title,
      tabs: client.map((tab) => ({title: tab.title, sources: tab.sources}))
    });
  }
  
  fs.writeFileSync('./dist/modules.json', JSON.stringify(clients));  
})();
